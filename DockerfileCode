# set the base image to Debian
# https://hub.docker.com/_/debian/
FROM ubuntu:22.04
# FROM debian:latest

ENV DEBIAN_FRONTEND noninteractive
# Set Python and Pip versions
ENV PYTHON_VERSION=3.10.10
ENV PYTHON_PIP_VERSION=21.3.1
ENV VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3

# nvm environment variables
ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 18.18.2

SHELL ["/bin/bash", "-c"]

# replace shell with bash so we can source files
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# update the repository sources list
# and install dependencies
RUN apt-get update \
&& apt-get install -y curl git nano \
&& apt-get -y autoclean

#PYTHON
#RUN apt-get install build-essential software-properties-common -y
#RUN add-apt-repository ppa:deadsnakes/ppa
#RUN apt update && apt-get install -y python3.11 python3-pip
RUN apt update && apt-get install -y python3 python3-pip

# install nvm
# https://github.com/creationix/nvm#install-script
RUN curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash

# install node and npm
RUN source $NVM_DIR/nvm.sh \
 && nvm install $NODE_VERSION \
 && nvm alias default $NODE_VERSION \
 && nvm use default

# add node and npm to path so the commands are available
ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

# confirm installation
RUN node -v
RUN npm -v

COPY rotkiboy /app

WORKDIR /app/
RUN npm install -g pnpm@8 && pnpm install -C frontend/ --no-optional

RUN pip3 install virtualenvwrapper && export WORKON_HOME=$HOME/.virtualenvs && export PROJECT_HOME=$HOME/Devel && source /usr/local/bin/virtualenvwrapper.sh > /dev/null && mkvirtualenv rotki -p /usr/bin/python3.10
RUN echo "WORKON_HOME=$HOME/.virtualenvs" >> ~/.bashrc && echo "PROJECT_HOME=$HOME/Devel" >> ~/.bashrc && echo ". /usr/local/bin/virtualenvwrapper.sh" >> ~/.bashrc
RUN pip3 install --upgrade pip
RUN pip3 install -r requirements.txt
RUN pip3 install -r requirements_dev.txt
# RUN pip3 install -e .
# ARG REVISION
# ARG ROTKI_VERSION
# ENV REVISION=$REVISION
# ENV ROTKI_VERSION=$ROTKI_VERSION
VOLUME ["/data", "/logs", "/config"]

EXPOSE 8080 4242
WORKDIR /app/frontend/

COPY entrypoint.sh /app/
ENTRYPOINT ["/bin/bash", "/app/entrypoint.sh"]

CMD ["tail", "-f", "/dev/null"]

# HEALTHCHECK CMD curl --fail http://localhost/api/1/ping || exit 1
